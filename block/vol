#!/bin/sh

usage() {
    echo "Usage: $0 [-j < -i | -o > <-c CHANNEL>] [-s] [-i INTERVAL]"
    echo "Block for printing volume"
    echo ""

    echo "Arguments"
    echo "  -h  " "Print this help."
    echo "  -j  " "User jamyxer mode."
    echo "  -c  " "Channel to use for volume backend."
    echo "  -s  " "Add lemonbar formatted buttons for scrolling."
    echo "  -i  " "Interval for volume change. Default is 5."
    echo ""

    echo "For alsa mode, the script responds to SIGUSR1 to update volume."
}

jamyxer_mode() {
    print_formatted() {
        # Scroll action formatted for lemonbar
        if [ $scroll ]; then
            pre="%{A4:jmctl v$o\m $chan +$interval:}"
            pre="${pre}%{A5:jmctl v$o\m $chan -$interval:}"
            suf="%{A}%{A}"
        fi
        echo -n "$pre"
        echo $1 | awk '{ printf("%d", int( $1 )); }'
        echo "$suf"
    }

    if [ -z "$chan" ]; then
        echo "Channel not set!" 1>&2
        usage; exit 1
    fi

    if [ $jin ]; then o=o; else o=i; fi

    print_formatted $(jmctl v$o\g $chan 2>&1)
    while :; do
        print_formatted $(jmctl v$o\listn $chan 2>&1)
    done
}

alsa_mode() {
    print_vol() {
        # Command for retrieving volume
        cmd="amixer get Master \
             | grep -Eo '\[[0-9]{1,3}%\]' \
             | tr -d '[]%' \
             | tail -1"

        if [ $scroll ]; then
            pre="%{A4:amixer set $chan $interval%+}"
            pre="${pre}%{A5:amixer set $chan $interval%-}"
            suf="%{A}%{A}"
        fi

        echo "${pre}$(eval $cmd)${suf}"
    }

    # Respond to SIGUSR1
    trap ":" USR1

    # Stay alive
    while :; do
        print_vol
        sleep 10 &
        wait $!
    done
}

mode=alsa # one of: jamyxer, alsa
chan=Master
interval=5
while getopts ":jioc:su:" opt; do
    case $opt in
        j)
            mode=jamyxer ;;
        i)
            jin=1 ;;
        o)
            jin=0 ;;
        c)
            chan="$OPTARG" ;;
        s)
            # scroll action meant for use with lemonbar
            scroll=1 ;;
        i)
            interval="$OPTARG"
        h)
            usage
            exit 0
            ;;
        \?)
            echo "Invalid option: -$OPTARG" 1>&2
            usage
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." 1>&2
            usage
            exit 1
            ;;
    esac
done

case "$mode" in
    jamyxer)
            jamyxer_mode;;
    alsa)
            alsa_mode;;
    *)
            echo "Invalid mode $mode, check -h for mode info." 1>&2
            exit 1
            ;;
esac
